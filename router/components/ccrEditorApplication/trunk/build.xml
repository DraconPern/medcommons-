<?xml version="1.0"?>
<!-- ======================================================================
     $Id$
     ====================================================================== -->
<!--
	Creates a CCREditorTestApplication.war file which is used to install a CCREditorTestApplication application. This is a simple
	JNLP application used for testing the the third party application API for editing CCRs.
	-->
<project name="ccrEditorTestApplication" default="world" xmlns:ivy="antlib:org.apache.ivy.ant">

  <!-- properties to customize here -->
	<property file="build.properties" />
	<tstamp>
       <format property="cur-tstamp" pattern="M/d/yyyy h:m a"/>
	</tstamp>

	<property file="pack.properties" />

  <!-- By default put the medcommons repo in the user's home directory under .mc -->
  <property name="mc.ivy.repo" value="${user.home}/.mc"/>
  <property name="application.package.classes" value="build/classes"/>
  <property name="application.package" value="net.medcommons.application"/>
  <property name="application.package.folder" value="net/medcommons/application"/>
  <property name="application.package.files" value="${application.package.folder}/**"/>
  <property name="build.dist" value="build/dist"/>
  <property name="build.jnlp" value="build/jnlp"/>
  <property name="stage.jnlp" value="build/stage/jnlp"/>
  <property name="stage.lib" value="build/stage/lib/"/>
  <property name="build.lib" value="build/dist/lib"/>
  <target name="world" depends="generate-war">
  </target>

    <!-- - - - - - - - - - - - - - - - - -
          target: init
     - - - - - - - - - - - - - - - - - -->
    <target name="init">
		<mkdir dir="${build.lib}"/>
      <echo message="Initializing build ..." />
      <ivy:configure file="ivy-settings.xml" />
      <ivy:retrieve pattern="${build.lib}/[artifact].[ext]" sync="true"/>
	  <available file="${stage.lib}" property="stage.lib.present" />
    </target>

	 


<target name="init-lib" unless="stage.lib.present" depends="init">
	  <mkdir dir="build/dist/" />
	  <mkdir dir="${stage.lib}"/>
      <copy todir="${stage.lib}">
			<fileset dir="${build.lib}">
			</fileset>
		</copy>
      <apply executable="signpack.sh" type="file" osfamily="unix"
     		 resolveexecutable="true" failonerror="true" ignoremissing="false">
				<fileset dir="${stage.lib}" includes="**/*.jar" excludes="**/activ*.jar"/>
				<srcfile/>
				<arg value="${keystore.location}"/>
				<arg value="${keystore.password}"/>
				<arg value="${key.alias}"/>
		</apply>
    </target>

    <!-- =================================
          target: compile
         ================================= -->
    <target name="compile" depends="init-lib,generate-index-file" description="--> compiles source">
      <mkdir dir="build/classes"/>

      <javac srcdir="src/java" compiler="modern" target="1.5" destdir="build/classes" debug="true" >
        <classpath>
          <fileset dir="${stage.lib}">
            <include name="**/**.jar"/>
          </fileset>
        </classpath>
      </javac>
    </target>

    

	<!--
	  Convert the libraries to be included in the
	  Class-Path attribute of the MANIFEST.MF file
	-->
	<path id="application.compile.path">

				<fileset dir="${stage.lib}">
					<include name="**/*.jar"/>
					<!-- Log4j.. -->
				</fileset>
	</path>




	<target name="packjar" depends="compile">


		<mkdir dir="${application.package.classes}" />

		<pathconvert property="application.manifest.classpath"
			                      pathsep=" ">
			  <path refid="application.compile.path"/>
			  <chainedmapper>
			    <flattenmapper/>
			    <globmapper from="*" to="lib/*"/>
			  </chainedmapper>
			</pathconvert>

<!--
		<copy todir="${build.dist}">
			<fileset dir="etc/images">
				<include name="**/*.jpg"/>
				<include name="**/*.png"/>
			</fileset>
		</copy>

-->
		<jar jarfile="${build.dist}/medcommons-ccrEditorTest-application.jar"
				basedir="${application.package.classes}">
				<manifest>
					<attribute name="Built-By" value="${user.name}"/>
			      	<attribute name="Class-Path" value="${application.manifest.classpath}"/>
					<!-- <attribute name="Build-Version" value="${buildVersion}"/> -->
					<attribute name="Main-Class" value="net.medcommons.application.ccreditortest.ccrEditor"/>

			      </manifest>

	
		<fileset dir="src/">
			<include name="timestamp.txt"/>
			<include name="ddlversion.txt"/>
			<include name="buildtime.txt"/>
			
		</fileset>
			<!--
			<fileset dir="etc/conf">
			<include name="log4j.xml"/>
		</fileset>
-->
		</jar>

			<!--
			<apply executable="signpack.sh" type="file" osfamily="unix"
     		 resolveexecutable="true" failonerror="true" ignoremissing="false">
				<fileset dir="${stage.lib}" includes="**/*.jar" excludes="**/activ*.jar"/>
				<srcfile/>
				<arg value="${keystore.location}"/>
				<arg value="${keystore.password}"/>
				<arg value="${key.alias}"/>
		</apply>
			-->
		<apply executable="signpack.sh" type="file" osfamily="unix"
     		 resolveexecutable="true" failonerror="true" ignoremissing="false">
				 <fileset dir="${build.dist}" includes="medcommons-ccrEditorTest-application.jar" />
				<srcfile/>
				<arg value="${keystore.location}"/>
				<arg value="${keystore.password}"/>
				<arg value="${key.alias}"/>
		</apply>
	


<echo file="version.xml" append="false" message="&lt;?xml version='1.0' encoding='utf-8'?&gt;&lt;version&gt;&lt;rev&gt;$$Rev: ${svn.revision} $$&lt;/rev&gt;&lt;/version&gt;"/>


	</target>

    <target name="publish" depends="compile">
      <!-- You will get an error when publishing unless you increment the version number below -->
      <ivy:publish resolver="public" pubrevision="1.0.1" overwrite="true">
        <artifacts pattern="build/dist/[artifact].[ext]" />
      </ivy:publish>
    </target>

    <target name="clean">
      <delete dir="build/jnlp"/>
	  <delete dir="build/classes"/>
	  <delete dir="build/dist/classes"/>
	 
    </target>
	<target name="cleanall">
     <delete dir="build"/>
    </target>

	<target name="build-webapp">
		<mkdir dir="${stage.jnlp}"/>
		 <copy todir="${stage.jnlp}">
			<fileset dir="src/meta/war"/>
			
		</copy>
		<mkdir dir="${stage.jnlp}/lib"/>
		<mkdir dir="${stage.jnlp}/images"/>
		
		<mkdir dir="${stage.jnlp}/WEB-INF/lib"/>
	    <mkdir dir="${stage.jnlp}/WEB-INF/classes"/>
		<copy todir="${stage.jnlp}/WEB-INF/lib">
			<fileset dir="build/dist/lib">
				<!--<include name="jnlp*.jar"/>
				<include name="commons*.jar"/>
				-->
				<include name="**.jar"/>
		     </fileset>

	    </copy>
		<copy todir="${stage.jnlp}/WEB-INF/classes">
			<fileset dir="src/meta/war/app">
				<include name="log4j.xml"/>
		     </fileset>
<!--
			<fileset dir="src/java/net/medcommons/application/ccrEditor/http/jsp">
								<include name="**"/>
								<exclude name="**/.svn"/>
				</fileset>
	-->
	    </copy>
	</target>
	<target name="generate-war" depends="packjar, build-webapp">
		 <mkdir dir="${build.jnlp}"/>


		<copy todir="${stage.jnlp}/app">
			<fileset dir="${stage.lib}"/>
		       <!-- <globmapper from="*.jar" to="*__V1.0.jar"/> -->
	    </copy>

		<copy todir="${stage.jnlp}/app">
			<fileset dir="build/dist">
				<include name="medcommons-ccrEditorTest-application.jar*" />
				<include name="Active.png"/>
            </fileset>
	  </copy>
		
		<jar jarfile="${build.jnlp}/CCREditorTest.war"
           basedir="${stage.jnlp}"
      />
	</target>
<target name="update-version" unless="version.noupdate">
		<exec executable="svnversion" output="src/ddlversion.txt">
			<arg value="." />
		</exec>
		<loadfile property="buildVersion" srcFile="src/ddlversion.txt"/>
		<echo message="Build version is ${buildVersion}"/>
	</target>


	<target name="run">
		 <java classname="net.medcommons.application.ccreditortest.CCREditor" fork="true" >
    		<jvmarg value="-Xmx256m"/>
    		<jvmarg value="-Xdebug"/>
		 	  <jvmarg value="-Xnoagent"/>
		 	  <jvmarg value="-XX:MaxPermSize=128m"/>
		 	  <jvmarg value="-Xrunjdwp:transport=dt_socket,server=y,address=4144,suspend=n"/>
         <arg line="-open"/>
         <arg line="etc/test/getPHRReference.xml"/>


        <classpath>
          <fileset dir="${stage.lib}">
            <include name="*.jar" />
          </fileset>
          <fileset dir="build/dist">
            <include name="medcommons-ccrEditorTest-application.jar" />
          </fileset>
        </classpath>

      </java>
	</target>
		<target name="spawn">
		 <java classname="net.medcommons.application.ccreditortest.CCREditor" fork="true" spawn="true" >
    		<jvmarg value="-Xmx256m"/>
    		<jvmarg value="-Xdebug"/>
		 	  <jvmarg value="-Xnoagent"/>
		 	  <jvmarg value="-XX:MaxPermSize=128m"/>
		 	  <jvmarg value="-Xrunjdwp:transport=dt_socket,server=y,address=4144,suspend=n"/>
         <arg line="src/meta/war/app/DDL.properties"/>
         <arg line="http://localhost:9080"/>


        <classpath>
          <fileset dir="${stage.lib}">
            <include name="*.jar" />
          </fileset>
          <fileset dir="build/dist">
            <include name="medcommons-ccrEditorTest-application.jar" />
   
          </fileset>
        </classpath>

      </java>
	</target>

	
	<target name="build-timestamp">
		<tstamp>
			<format property="build.buildtime" pattern="EEE, MMM d 'at' yyyy HH:mm:ss z"/>
		</tstamp>
		<tstamp>
			<format property="build.timestamp" pattern="yyyy-MM-dd HH:mm:ss"/>
		</tstamp>
		<echo message="${build.buildtime}"  file="src/buildtime.txt"/>
		<echo message="${build.timestamp}"  file="src/timestamp.txt"/>
	</target>

	
	<target name="test-module" depends="spawn">
		<junit printsummary="yes" fork="yes" haltonfailure="yes" >
			 <classpath>
          <fileset dir="${stage.lib}">
            <include name="*.jar" />
          </fileset>
          <fileset dir="build/dist">
            <include name="medcommons-ccrEditor-application.jar" />
            <include name="medcommons-ccrEditor.jar" />
          </fileset>
        </classpath>
			<formatter type="plain"/>

			<test name="net.medcommons.application.ccrEditor.test.WaitStartupTest"/>
			<test name="net.medcommons.application.ccrEditor.test.ContextManagerTest"/>
			<test name="net.medcommons.application.ccrEditor.test.UploadDICOMTest"/>

			<test name="net.medcommons.application.ccrEditor.test.ShutdownTest"/>


		</junit>

	</target>
	<target name="generate-index-file" depends="build-timestamp,update-version">
		<loadfile property="buildVersion" srcFile="src/ddlversion.txt"/>
		<loadfile property="buildTime" srcFile="src/buildtime.txt"/>
	<echo message="Build version is ${buildVersion}"/>
	    <delete file="src/meta/war/index.html" quiet="true"/>
	    <copy file="src/meta/war/index_template.html"
	             tofile="src/meta/war/index.html" >
	        <filterchain>
	           <striplinecomments>
	              <comment value="!"/>
	           </striplinecomments>
	           <replacetokens>
	                <token key="BuildTime" value="${buildTime}"/>
	                <token key="BuildVersion" value="${buildVersion}"/>
	            </replacetokens>
	        </filterchain>
	    </copy>
	</target>
</project>
