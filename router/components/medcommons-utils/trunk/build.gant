// Import ivy tools and retrieve dependencies
includeTool << gant.tools.Ivy
ant.property(file:'build.properties')
ant.property(name:'mc.ivy.repo',value:"${System.properties['user.home']}/.mc")
ivy.settings(file: 'ivy-settings.xml')
ivy.retrieve(pattern:'lib/[artifact].[ext]',sync:'true')

// Use default MedCommons build targets
includeTargets << new File('lib/builddefaults.gant')

target(tests: 'compile and run junit tests') {

  depends(compile)

  mkdir(dir: 'build/test-classes')
  ant.groovyc(srcdir: 'test-src', destdir: 'build/test-classes') {
    classpath {
      fileset(dir: 'lib') {
        include(name:'**/*.jar')
      }
      pathelement(location: 'build/classes')
    }
    javac(source : '1.5' , target : '1.5' , debug : 'on') {
      classpath {
        fileset(dir: 'lib') {
          include(name:'**/*.jar')
        }
        pathelement(location: 'build/classes')
      }
    }
  }

  delete(dir: 'test-results')
  mkdir(dir:'test-results')
  ant.junit(printsummary: 'withOutAndErr',fork: 'yes', failureproperty: "tests_failed") {
    classpath {
      fileset(dir: 'lib') {
        include(name:'**/*.jar')
      }
      pathelement(location: 'build/classes')
      pathelement(location: 'build/test-classes')
    }
    formatter (type: 'plain')
    batchtest (todir: 'test-results') {
      fileset(dir: 'build/test-classes') {
        include(name: '**/*Test.class')
      }
    }
  }
  if(ant.project.properties.tests_failed)
    throw new Exception("One or more JUnit tests failed!")
}
