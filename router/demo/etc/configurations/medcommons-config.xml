<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">
<!--
  This file contains internal software component configurations for 
  the MedCommons Gateway.  No user servicable parts!
-->
<beans>
  <bean id="mergePolicy" class="net.medcommons.router.services.ccrmerge.PatientDemoGraphicMatchMergePolicy">
  </bean>
  <bean id="ccrXPathCache" class="net.medcommons.phr.db.xml.XPathCache">
    <property name="XPathMappingFile" value="data/xpaths-ccr-1.0.xml"/>
    <!-- for development, set to low ms value so you can edit paths at run time 
    <property name="maxCacheAge" value="500"/>-->
  </bean>
  <bean id="systemServicesFactory" class="net.medcommons.modules.services.client.rest.RESTProxyServicesFactory">
    <constructor-arg><value>token:Gateway</value></constructor-arg>
  </bean>

  <bean id="documentResolver" class="net.medcommons.router.services.repository.DocumentResolver">
    <constructor-arg><ref bean="systemServicesFactory"/></constructor-arg>
  </bean>

  <bean id="xmlPhrDbConfig" class="net.medcommons.phr.db.xml.XMLPHRDBConfig">
    <property name="schemaPath" value="conf/CCR_20051109.xsd"/>
  </bean>

  <bean id="emailAddressCache" class="net.medcommons.router.services.account.EmailAddressCache">
  </bean>

  <bean id="systemStorageModel" class="net.medcommons.router.services.ccr.FixedContentStorageModel">
  </bean>

  <!--
  <bean id="systemStorageModel" class="net.medcommons.router.services.ccr.NamedDocumentStorageModel">
  </bean>
  -->

  <bean id="nodeKeyProvider" class="net.medcommons.router.configuration.tomcat.RegisterNodeTask">
  </bean>

  <bean id="profilesService" class="net.medcommons.router.services.profiles.XmlProfileService">
  </bean>

  <!--  for S3 --> 
  <bean id="s3Factory" class="net.medcommons.modules.backup.S3Factory" autowire="constructor">
  </bean>

  <bean id="backupService" class="net.medcommons.modules.backup.S3BackupService" autowire="constructor">
  </bean>
  
  <!-- for file system 
  <bean id="backupService" class="net.medcommons.modules.backup.FileSystemBackupService" autowire="constructor">
  </bean>
  -->
  
  <!--  for Atmos 
  <bean id="backupService" class="net.medcommons.modules.backup.atmos.AtmosBackupService" autowire="constructor">
  </bean>
  -->
  
  <bean id="expiryService" class="net.medcommons.router.services.expiry.ExpireAccountsTask" autowire="constructor">
  </bean>
  
  <bean id="messageService" class="net.medcommons.router.messaging.HibernateMessageService">
    <property name="remoteOnly" value="false"/>
    <property name="enableDB" value="false"/>
  </bean>
  
  <bean id="smallFileBackupService" class="net.medcommons.modules.backup.SmallFileBackupService">
    <constructor-arg index="0"><ref bean="backupService"/></constructor-arg> 
  </bean>

  <bean id="documentIndexService" class="net.medcommons.router.services.index.DBDocumentIndexService">
  </bean>

  <bean id="dicomStatusService" factory-bean="systemServicesFactory" factory-method="getDICOMStatusService">
  </bean>
  
  <bean id="JdbcPhrDbConfig" class="net.medcommons.phr.db.sqlite.JDBCPHRDBConfig">
    <property name="fileStoreRoot" value="data"/>
    <property name="driverClass" value="org.sqlite.JDBC"/>
    <property name="connectUrl" value="jdbc:sqlite:data/Repository/{dbname}/account.db"/>
  </bean>

  <bean id="phrDatabase" class="net.medcommons.phr.db.sqlite.SQLitePHRDB" singleton="false"/>
  
  <!--
  <bean id="expirationService" class="org.springframework.remoting.jaxws.JaxWsPortProxyFactoryBean" lazy-init="true">
    <property name="fileStoreRoot" value="data"/>
    <property name="serviceInterface" value="net.medcommons.modules.services.interfaces.ExpireService"/>
    <property name="wsdlDocumentUrl" value="http://localhost:8080/orders/services/expire?wsdl"/>
    <property name="namespaceUri" value="http://orders"/>
    <property name="serviceName" value="expire"/>
    <property name="portName" value="expireHttpPort"/>
  </bean>  
    -->
  
</beans>
