//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2032
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 1.1.4322.2032.
// 
namespace cxp.CXP {
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="CXPSoapBinding", Namespace="https://gateway001.medcommons.net:8443/router/services/CXP")]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(CXPAttachment))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(Parameter))]
    public class CXP_10Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        /// <remarks/>
        public CXP_10Service() {
            this.Url = "https://gateway001.medcommons.net/router/services/CXP";
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://cxp.medcommons.net", ResponseNamespace="https://gateway001.medcommons.net:8443/router/services/CXP")]
        [return: System.Xml.Serialization.SoapElementAttribute("putReturn")]
        public PutResponse put(string ccrXml) {
            object[] results = this.Invoke("put", new object[] {
                        ccrXml});
            return ((PutResponse)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginput(string ccrXml, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("put", new object[] {
                        ccrXml}, callback, asyncState);
        }
        
        /// <remarks/>
        public PutResponse Endput(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((PutResponse)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="put1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://cxp.medcommons.net", ResponseNamespace="https://gateway001.medcommons.net:8443/router/services/CXP")]
        [return: System.Xml.Serialization.SoapElementAttribute("putReturn")]
        public PutResponse put(string ccrXml, RegistryParameters[] inputRegistryParameters) {
            object[] results = this.Invoke("put1", new object[] {
                        ccrXml,
                        inputRegistryParameters});
            return ((PutResponse)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginput1(string ccrXml, RegistryParameters[] inputRegistryParameters, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("put1", new object[] {
                        ccrXml,
                        inputRegistryParameters}, callback, asyncState);
        }
        
        /// <remarks/>
        public PutResponse Endput1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((PutResponse)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="put2")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://cxp.medcommons.net", ResponseNamespace="https://gateway001.medcommons.net:8443/router/services/CXP")]
        [return: System.Xml.Serialization.SoapElementAttribute("putReturn")]
        public PutResponse put(string ccrXml, RegistryParameters[] inputRegistryParameters, CXPAttachment[] attachments) {
            object[] results = this.Invoke("put2", new object[] {
                        ccrXml,
                        inputRegistryParameters,
                        attachments});
            return ((PutResponse)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginput2(string ccrXml, RegistryParameters[] inputRegistryParameters, CXPAttachment[] attachments, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("put2", new object[] {
                        ccrXml,
                        inputRegistryParameters,
                        attachments}, callback, asyncState);
        }
        
        /// <remarks/>
        public PutResponse Endput2(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((PutResponse)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://cxp.medcommons.net", ResponseNamespace="https://gateway001.medcommons.net:8443/router/services/CXP")]
        [return: System.Xml.Serialization.SoapElementAttribute("getReturn")]
        public GetResponse get(string xmlData) {
            object[] results = this.Invoke("get", new object[] {
                        xmlData});
            return ((GetResponse)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginget(string xmlData, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("get", new object[] {
                        xmlData}, callback, asyncState);
        }
        
        /// <remarks/>
        public GetResponse Endget(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((GetResponse)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="get1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://cxp.medcommons.net", ResponseNamespace="https://gateway001.medcommons.net:8443/router/services/CXP")]
        [return: System.Xml.Serialization.SoapElementAttribute("getReturn")]
        public GetResponse get(RegistryParameters[] inputRegistryParameters) {
            object[] results = this.Invoke("get1", new object[] {
                        inputRegistryParameters});
            return ((GetResponse)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginget1(RegistryParameters[] inputRegistryParameters, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("get1", new object[] {
                        inputRegistryParameters}, callback, asyncState);
        }
        
        /// <remarks/>
        public GetResponse Endget1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((GetResponse)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://cxp.medcommons.net", ResponseNamespace="https://gateway001.medcommons.net:8443/router/services/CXP")]
        [return: System.Xml.Serialization.SoapElementAttribute("deleteReturn")]
        public DeleteResponse delete(string guid) {
            object[] results = this.Invoke("delete", new object[] {
                        guid});
            return ((DeleteResponse)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Begindelete(string guid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("delete", new object[] {
                        guid}, callback, asyncState);
        }
        
        /// <remarks/>
        public DeleteResponse Enddelete(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DeleteResponse)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="delete1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://cxp.medcommons.net", ResponseNamespace="https://gateway001.medcommons.net:8443/router/services/CXP")]
        [return: System.Xml.Serialization.SoapElementAttribute("deleteReturn")]
        public DeleteResponse delete(RegistryParameters[] parameters) {
            object[] results = this.Invoke("delete1", new object[] {
                        parameters});
            return ((DeleteResponse)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Begindelete1(RegistryParameters[] parameters, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("delete1", new object[] {
                        parameters}, callback, asyncState);
        }
        
        /// <remarks/>
        public DeleteResponse Enddelete1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DeleteResponse)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="delete2")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://cxp.medcommons.net", ResponseNamespace="https://gateway001.medcommons.net:8443/router/services/CXP")]
        [return: System.Xml.Serialization.SoapElementAttribute("deleteReturn")]
        public DeleteResponse delete(string guid, RegistryParameters parameters) {
            object[] results = this.Invoke("delete2", new object[] {
                        guid,
                        parameters});
            return ((DeleteResponse)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Begindelete2(string guid, RegistryParameters parameters, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("delete2", new object[] {
                        guid,
                        parameters}, callback, asyncState);
        }
        
        /// <remarks/>
        public DeleteResponse Enddelete2(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DeleteResponse)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://cxp.medcommons.net", ResponseNamespace="https://gateway001.medcommons.net:8443/router/services/CXP")]
        [return: System.Xml.Serialization.SoapElementAttribute("getVersionReturn")]
        public string getVersion() {
            object[] results = this.Invoke("getVersion", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetVersion(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getVersion", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndgetVersion(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("PutResponse", "urn:BeanService")]
    public class PutResponse {
        
        /// <remarks/>
        public string cxpVersion;
        
        /// <remarks/>
        public string guid;
        
        /// <remarks/>
        public RegistryParameters[] parameters;
        
        /// <remarks/>
        public string reason;
        
        /// <remarks/>
        public RegistryParameters[] registryParameters;
        
        /// <remarks/>
        public int status;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("RegistryParameters", "urn:BeanService")]
    public class RegistryParameters {
        
        /// <remarks/>
        public Parameter[] parameters;
        
        /// <remarks/>
        public string registryId;
        
        /// <remarks/>
        public string registryName;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("Parameter", "urn:BeanService")]
    public class Parameter {
        
        /// <remarks/>
        public string name;
        
        /// <remarks/>
        public string value;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("DeleteResponse", "urn:BeanService")]
    public class DeleteResponse {
        
        /// <remarks/>
        public string cxpVersion;
        
        /// <remarks/>
        public string guid;
        
        /// <remarks/>
        public RegistryParameters[] parameters;
        
        /// <remarks/>
        public string reason;
        
        /// <remarks/>
        public RegistryParameters[] registryParameters;
        
        /// <remarks/>
        public int status;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("GetResponse", "urn:BeanService")]
    public class GetResponse {
        
        /// <remarks/>
        public string content;
        
        /// <remarks/>
        public string contentType;
        
        /// <remarks/>
        public string cxpVersion;
        
        /// <remarks/>
        public string guid;
        
        /// <remarks/>
        public RegistryParameters[] parameters;
        
        /// <remarks/>
        public string reason;
        
        /// <remarks/>
        public RegistryParameters[] registryParameters;
        
        /// <remarks/>
        public int status;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("CXPAttachment", "urn:BeanService")]
    public class CXPAttachment {
    }
}
