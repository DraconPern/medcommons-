<?php
require_once "DB.inc.php";
require_once "../../acct/alib.inc.php";

$base = '/acct/';



$ROOT = 'https://'.$_SERVER ['HTTP_HOST'];// "https://portal.medcommons.net/";
$ROOTUPLOAD = $ROOT.$base;
$UploadHandler = $ROOTUPLOAD.'putils/uh.php';
$PLForm = $base.'index.php';


function group_query($mcid,$maxgroups=20)
{

	$db = DB::get();

	$row = $db->first_row("select * from users where mcid = '$mcid'  " );
	if(!$row)
	die("No such user on re-read of ".$mcid);

	$info = new stdClass;
	$info->accid=$row->mcid;
	$info->fn=$row->first_name;
	$info->ln = $row->last_name;
	$info->email = $row->email;
	$info->idp = '';


	$info = get_full_account_info($info);
	// What other groups does this user have?
	$info->groups = $db->query("select gi.accid,gi.name, gi.parentid,gi.logo_url,gi.grouptypeid, gm.comment 
	                              from groupinstances gi, groupmembers gm
                                    where gm.memberaccid = ? and gm.groupinstanceid = gi.groupinstanceid",
	                                     array($info->accid));
	$xml->result =  $info;
	$xml->status = "ok";
	return $xml;
}



function makeGLink ($g)
{
	global $ROOT,$UploadHandler;
	
	$GroupUploadURL = $ROOT.$g->accid.'/upload';
	
	$arg = base64_encode ($g->name.'|'.$g->name.'|'.$g->accid.'|'
	.$GroupUploadURL.'|'.$g->logo_url.'|'.$UploadHandler);
	
if ($g->grouptypeid	!=0) 
	$UploadForm = $ROOT."p/uploader1.php"; else $UploadForm = $ROOT."p/uploader0.php";
	$href = "$UploadForm?a=$arg";
	$link = "<li class=grouplinks ><a  title='{$g->name}' href='$href' >{$g->name}</a></li>
";
	return $link;
}




function get_group_list_entries ($accid)
{

	try {
		$result =  group_query($accid);
		if(!$result)
		throw new Exception("Unable to decode JSON returned from URL ".$remoteurl.": ".$file);
		if($result->status != "ok")
		throw new Exception("Bad status '".$result->status."' error='".$result->error."' returned from JSON call ".$remoteurl);
		return $result;
	}
	catch(Exception $ex) {
		die("Unsuccessful test completion ". $ex->getMessage());
	}
	return false;
}

function Gtestif_logged_in()
{
	if (!isset($_COOKIE['mc'])) //wld 10 sep 06 strict type checking
	return false;
	$mc = $_COOKIE['mc'];

	$accid=""; $fn=""; $ln = ""; $email = ""; $idp = ""; $auth="";
	if ($mc!='')
	{
		$accid=""; $fn=""; $ln = ""; $email = ""; $idp = ""; $auth="";
		$props = explode(',',$mc);
		for ($i=0; $i<count($props); $i++) {
			list($prop,$val)= explode('=',$props[$i]);
			switch($prop)
			{
				case 'mcid': $accid=$val; break;
				case 'fn': $fn = $val; break;
				case 'ln': $ln = $val; break;
				case 'email'; $email = $val; break;
				case 'from'; $idp = stripslashes($val); break;
				case 'auth'; $auth = $val; break;
			}
		}
	}
	return array($accid,$fn,$ln,$email,$idp,$mc,$auth);
}

// main starts here



//	echo "getting consultants dashboard";
$db = DB::get();

// show the consultants filtered dashboard
if(!($me=Gtestif_logged_in())) die ("Please first <a href='../acct/login.php'>login</a> to MedCommons");


else
list($accid,$fn,$ln,$email,$idp,$mc,$auth) =$me;

$time=time();
echo "<h5>Your Upload Links Have Been Generated</h5>";
echo "<p>These links have been generated by MedCommons as permalinks, with the intention that you
copy your selected links into your own html markup. You can also test the Upload Links here</p>
";
echo "<p>You will note not all of the forms are the same. The Vascular group(s) have been hand-patched in the GroupInstances table to mark those groups requiring Jan's processing. This can be further generalized.</p>";
echo "<!-- html swatch $time generated by uploadFormFactory.php -->
";
$menutop = "<div id=grouplinks><ul>
";

$result  = get_group_list_entries($accid);
$groups = $result->result->groups;
$firstg = false;

foreach ($groups as $g) {
	if (!$firstg) $firstg = $g;
	$menutop .=makeGLink($g);
}


$menutop .="</ul></div>
";


echo $menutop;

echo "<!-- end html swatch $time -->
";
?>

